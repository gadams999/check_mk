#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-

#
# (c) 2014 Adams Technology Consulting
#          Gavin Adams <me@gavinadams.org>
#

# This is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  This file is distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.

# Pulls values from the <<<nest_thermostat>>> section of the special agent
# "agent_nest" in the same checks directory
# Uses values to determine name and overall status of the device (not
# the read values of humidity and such)

def nest_thermostat_parse(info):
    thermostats = {}
    for line in info:
        if line[0].startswith('['):
            name = line[0][1:-1]
            thermostat = {}
            thermostats[name] = thermostat
        else:
            key, value = line
            if key in ["is_online", "has_leaf"]:
                value = value.lower() == "true"
            elif key in ["unique_id", "software_version", "temperature_scale"]:
                value = str(value)
            elif key in ["last_connected" ]:
                value = str(value)
            thermostat[key] = value
    return thermostats

def inventory_nest_thermostat(info):
    thermostats = nest_thermostat_parse(info)
    return [ (name, {}) for name in thermostats ]

def check_nest_thermostat(item, params, info):
    thermostats = nest_thermostat_parse(info)
    if item not in thermostats:
        return 3, "Thermostat does not exist"
    thermostat = thermostats[item]
    
    infotext = ""
    perfdata = ""

    if thermostat["is_online"]:
        infotext += "Nest Thermostat Online, Version: %s" % \
          (thermostat["software_version"] )
        if thermostat["has_leaf"]:
            infotext += ", GREEN! (Has leaf)"
            perfdata = [( "leaf", 1)]
        else:
            infotext += ", RED! (no leaf)"
            perfdata = [( "leaf", 0)]
        return (0, infotext, perfdata)
    else:
        infotext += "Nest Thermostat Offline, Version: %s" % (thermostat["software_version"])
        return (1, infotext)

check_info["nest_thermostat"] = {
    'check_function':        check_nest_thermostat,
    'inventory_function':    inventory_nest_thermostat,
    'service_description':   'Thermostat %s',
    'group':                 'nest_thermostat',
    'has_perfdata':          True,
}

